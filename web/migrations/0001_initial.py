# Generated by Django 3.0.2 on 2020-04-15 07:53

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='GenomeProperty',
            fields=[
                ('accession', models.CharField(max_length=11, primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=255)),
                ('type', models.CharField(max_length=30)),
                ('author', models.TextField()),
                ('threshold', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('private', models.TextField(blank=True, null=True)),
                ('ispublic', models.IntegerField()),
                ('checked', models.IntegerField()),
            ],
            options={
                'db_table': 'genome_property',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GoTerms',
            fields=[
                ('go_id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('term', models.TextField()),
                ('category', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'go_terms',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GpStep',
            fields=[
                ('auto_step', models.AutoField(primary_key=True, serialize=False)),
                ('step_number', models.IntegerField()),
                ('step_id', models.TextField()),
                ('step_display_name', models.TextField(blank=True, null=True)),
                ('required', models.IntegerField()),
            ],
            options={
                'db_table': 'gp_step',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GpStepEvidenceGp',
            fields=[
                ('auto_gp_step', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'gp_step_evidence_gp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GpStepEvidenceIpr',
            fields=[
                ('interpro_acc', models.CharField(max_length=9)),
                ('signature_acc', models.CharField(max_length=45)),
                ('sufficient', models.IntegerField()),
                ('auto_ipr_step', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'gp_step_evidence_ipr',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LiteratureReference',
            fields=[
                ('pmid', models.IntegerField(primary_key=True, serialize=False)),
                ('title', models.TextField(blank=True, null=True)),
                ('author', models.TextField(blank=True, null=True)),
                ('journal', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'literature_reference',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PropDef',
            fields=[
                ('prop_def_id', models.IntegerField(primary_key=True, serialize=False)),
                ('property', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('private', models.TextField(blank=True, null=True)),
                ('prop_type', models.CharField(blank=True, max_length=30, null=True)),
                ('role_id', models.IntegerField(blank=True, null=True)),
                ('prop_acc', models.CharField(max_length=11)),
                ('ispublic', models.IntegerField()),
                ('thresh', models.IntegerField()),
                ('eval_method', models.CharField(blank=True, max_length=32, null=True)),
                ('sub_property', models.IntegerField()),
            ],
            options={
                'db_table': 'prop_def',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PropStep',
            fields=[
                ('prop_step_id', models.AutoField(primary_key=True, serialize=False)),
                ('step_num', models.CharField(max_length=8)),
                ('step_name', models.CharField(blank=True, max_length=255, null=True)),
                ('in_rule', models.IntegerField(blank=True, null=True)),
                ('branch', models.CharField(max_length=8)),
                ('drop_name', models.CharField(blank=True, max_length=255, null=True)),
                ('prop_def_link_type', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'prop_step',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StepEvLink',
            fields=[
                ('step_ev_id', models.AutoField(primary_key=True, serialize=False)),
                ('query', models.CharField(max_length=30)),
                ('method', models.CharField(max_length=15)),
                ('get_go', models.IntegerField(db_column='get_GO')),
                ('prop_step_link_type', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'step_ev_link',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GpDatabaseLink',
            fields=[
                ('gp_accession', models.ForeignKey(db_column='gp_accession', on_delete=django.db.models.deletion.PROTECT, primary_key=True, serialize=False, to='web.GenomeProperty')),
                ('db_id', models.TextField()),
                ('db_link', models.TextField()),
                ('other_params', models.TextField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'gp_database_link',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GpLitRef',
            fields=[
                ('gp_accession', models.ForeignKey(db_column='gp_accession', on_delete=django.db.models.deletion.PROTECT, primary_key=True, serialize=False, to='web.GenomeProperty')),
                ('list_order', models.IntegerField()),
            ],
            options={
                'db_table': 'gp_lit_ref',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GpStepToGo',
            fields=[
                ('auto_gp_step', models.ForeignKey(db_column='auto_gp_step', on_delete=django.db.models.deletion.PROTECT, primary_key=True, serialize=False, to='web.GpStepEvidenceGp')),
            ],
            options={
                'db_table': 'gp_step_to_go',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IprStepToGo',
            fields=[
                ('auto_ipr_step', models.ForeignKey(db_column='auto_ipr_step', on_delete=django.db.models.deletion.PROTECT, primary_key=True, serialize=False, to='web.GpStepEvidenceIpr')),
            ],
            options={
                'db_table': 'ipr_step_to_go',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PropGoLink',
            fields=[
                ('prop_def', models.ForeignKey(db_column='prop_def', on_delete=django.db.models.deletion.PROTECT, primary_key=True, serialize=False, to='web.PropDef')),
                ('go_id', models.CharField(max_length=10)),
                ('get_go', models.IntegerField(db_column='get_GO')),
                ('curated', models.IntegerField()),
                ('curation_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'prop_go_link',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PropLink',
            fields=[
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, primary_key=True, related_name='proplink_parent', serialize=False, to='web.PropDef')),
                ('link_type', models.CharField(max_length=12)),
                ('link_value', models.FloatField(blank=True, null=True)),
                ('link_string', models.CharField(blank=True, max_length=255, null=True)),
                ('link_int', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'prop_link',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PropRef',
            fields=[
                ('prop_def', models.ForeignKey(db_column='prop_def', on_delete=django.db.models.deletion.PROTECT, primary_key=True, serialize=False, to='web.PropDef')),
                ('ref_num', models.IntegerField()),
                ('ref_type', models.CharField(max_length=10)),
                ('accession', models.CharField(blank=True, max_length=20, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('authors', models.CharField(blank=True, max_length=255, null=True)),
                ('citation', models.CharField(blank=True, max_length=80, null=True)),
                ('comment', models.CharField(blank=True, max_length=1000, null=True)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'prop_ref',
                'managed': False,
            },
        ),
    ]
